组合模式

将对象组合成树形结构以表示‘部分－整体’的层次结构；组合模式使得用户对单个对象和组合对象的使用具有一致性

透明方式
在Component中声明所有用来管理子对象的方法，包括add、remove等，这样实现Component接口的所有子类都具备了add和remove；这样做好处是Leaf和Composite对于外界没有区别，它们具备完全一致的行为接口；但由于Leaf本身不具备add和remove功能，所以实现它是没有意义的

安全方式
在Component接口中不声明add和remove，那么子类的Leaf也就不需要去实现，而是在Composite声明所有用来管理子类对象的方法；不过由于不够透明，所以Leaf和Composite将不具有相同的接口，客户端的调用需要做相应的判断，带来不便

当需求中是体现部分与整体层次的结构时，以及希望用户可以忽略组合对象与单个对象的不同，统一地使用组合结构中的所有对象时，就应该考虑用组合模式

好处：基本对象（例如部门）可以被组合成更复杂的组合对象（例如分公司），而这个组合对象又可以被组合，这样不断地递归下去，客户代码中，任何用到基本对象的地方都可以使用组合对象；用户不需要关心到底是处理一个叶子节点还是处理一个组合组件，也就用不着为定义组合而写一些选择判断语句；组合模式让客户可以一致地使用组合结构和单个对象